version: '3.8'

services:
  # Frontend (Vue.js)
  frontend:
    build: ./frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`3.84.100.53`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    restart: always
    networks:
      - app-network

  # Auth API (Go)
  auth-api:
    build: ./auth-api
    environment:
      - PORT=8080
    ports:
      - "8080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-api.rule=Host(`3.84.100.53`) && PathPrefix(`/api/auth`)"
      - "traefik.http.routers.auth-api.entrypoints=web"
      - "traefik.http.services.auth-api.loadbalancer.server.port=8080"
    restart: always
    networks:
      - app-network

  # Todos API (Node.js)
  todos-api:
    build: ./todos-api
    environment:
      - PORT=3000
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todos-api.rule=Host(`3.84.100.53`) && PathPrefix(`/api/todos`)"
      - "traefik.http.routers.todos-api.entrypoints=web"
      - "traefik.http.services.todos-api.loadbalancer.server.port=3000"
    depends_on:
      - redis
    restart: always
    networks:
      - app-network

  # Users API (Java/Spring Boot)
  users-api:
    build: ./users-api
    environment:
      - PORT=8081
    ports:
      - "8081:8081"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users-api.rule=Host(`3.84.100.53`) && PathPrefix(`/api/users`)"
      - "traefik.http.routers.users-api.entrypoints=web"
      - "traefik.http.services.users-api.loadbalancer.server.port=8081"
    restart: always
    networks:
      - app-network

  # Log Message Processor (Python)
  log-message-processor:
    build: ./log-message-processor
    env_file:
      - .env
    depends_on:
      - redis
    restart: always
    networks:
      - app-network

  # Redis Queue
  redis:
    image: redis:alpine
    restart: always
    networks:
      - app-network

  # Traefik Reverse Proxy
  traefik:
    image: traefik:v2.5
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8082:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

